plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

// used in set-version.sh
// this variables define version and group for
// parent and all its submodules
def projectVersion = '1.0.0-SNAPSHOT'
def projectGroup = 'com.bso.companycob.registration-api'

group projectGroup
version projectVersion
sourceCompatibility = '11'

subprojects {
	group projectGroup
	version projectVersion

	apply plugin: "java"
	apply plugin: "jacoco"

	dependencies {
		implementation platform("software.amazon.awssdk:bom:${awsSdkVersion}")

		compileOnly "org.projectlombok:lombok:${lombokVersion}"
		annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
		implementation "io.springfox:springfox-boot-starter:${swaggerVersion}"
		implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"
		implementation "org.keycloak:keycloak-spring-boot-starter:${keycloakVersion}"
		implementation "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
		implementation "com.github.bruno303:dracko-mediator:${drackoMediatorVersion}"
		implementation "com.github.bruno303:spring-boot-dracko-mediator-starter:${drackoMediatorVersion}"
		implementation "com.github.bruno303:spring-boot-dracko-mediator-starter:${springBootDrackoMediatorVersion}"
		implementation "org.springframework.cloud:spring-cloud-starter-aws:${springCloudAwsVersion}"
		implementation "org.springframework.cloud:spring-cloud-starter-aws-messaging:${springCloudAwsVersion}"

		testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterApiVersion}"
		testImplementation "org.mockito:mockito-core:${mockitoCoreVersion}"
		testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
		testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterApiVersion}"
	}

	test {
		useJUnitPlatform()
	}
}

allprojects {
	repositories {
		mavenLocal()
		maven { url 'https://repo.spring.io/snapshot' }
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
}

bootJar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}