plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'maven-publish'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "io.springfox:springfox-boot-starter"
    implementation "io.springfox:springfox-swagger-ui"
    implementation "org.keycloak:keycloak-spring-boot-starter"
    implementation "org.keycloak.bom:keycloak-adapter-bom"
    implementation project(':domain')
    implementation project(':application:application-core')
    implementation project(':application:application-model')
    implementation project(':infrastructure')
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation project(':test-utils')
    implementation "com.github.bruno303:dracko-mediator"
}

springBoot {
    buildInfo()
}

publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}

bootRun {
    def separator = '#'
    if (project.hasProperty('jvmArgs')) {
        String projectJvmArgs = project.property('jvmArgs')
        println('jvmArgs are present: ' + projectJvmArgs)

        def projectJvmArgsSplitted = projectJvmArgs.split(separator)
        println('jvmArgs splitted: ' + projectJvmArgsSplitted)
        jvmArgs projectJvmArgsSplitted
    }
}